[build-system]
requires = ["setuptools>=68.0.0", "wheel>=0.41.0"]
build-backend = "setuptools.build_meta"

[project]
name = "safe-core"
version = "3.1.0"
description = "Professional cryptographic engine for secure storage systems"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["cryptography", "encryption", "security", "storage", "argon2", "aes", "chacha20"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Security :: Cryptography",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "cryptography>=41.0.0,<44.0.0",
    "argon2-cffi>=23.1.0,<26.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-timeout>=2.1.0",
]
lint = [
    "black>=23.7.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "pylint>=2.17.0",
    "mypy>=1.5.0",
    "bandit>=1.7.5",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]
dev = [
    "safe-core[test,lint,docs]",
    "ipython>=8.14.0",
    "ipdb>=0.13.13",
    "pre-commit>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/safe_core"
Documentation = "https://safe-core.readthedocs.io"
Repository = "https://github.com/yourusername/safe_core"
Issues = "https://github.com/yourusername/safe_core/issues"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v --tb=short --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.coverage.run]
source = ["safe_core"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false